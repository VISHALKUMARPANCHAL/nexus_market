<div class="col-lg-3">
    <div class="filter-sidebar p-4 bg-white rounded-3 shadow-sm border">
        <h5 class="mb-4 text-primary fw-bold">Filters</h5>
        <label><b>
                Categories
            </b></label>
        <?php foreach ($this->getcategories() as $category): ?>
            <div class="filter-option">
                <label>
                    <input type="checkbox" name="id" value="<?php echo htmlspecialchars($category->getCategoryId()); ?>"
                        class="filter-checkbox">
                    <?php echo htmlspecialchars($category->getName()); ?>
                </label>
            </div>
        <?php endforeach; ?>
        <?php foreach ($this->getAttribute() as $attribute): ?>
            <div class="filter-option">
                <label><b><?php echo ($attribute->getName()) ?></b></label>
                <br>
                <?php $attrs = $this->getValues($attribute->getAttributeId());
                foreach ($attrs as $attr): ?>
                    <label>
                        <input type="checkbox" name="<?php echo htmlspecialchars($attribute->getName()); ?>"
                            value="<?php echo htmlspecialchars($attr); ?>" class="filter-checkbox">
                        <?php echo htmlspecialchars(ucfirst($attr)); ?>
                    </label>
                    <br>
                <?php endforeach; ?>
            </div>
        <?php endforeach; ?>
        <div class="d-grid gap-2">
            <!-- <button class="btn btn-primary" onclick="filterProducts()">Apply Filters</button> -->
            <button class="btn btn-outline-secondary" onclick="clearFilters()">Clear All Filters</button>
        </div>
    </div>
</div>

<script>
    // $(document).ready(function() {
    //     function toggleCheckbox(id) {
    //         var checkbox = $('#' + id);
    //         checkbox.prop('checked', !checkbox.prop('checked'));
    //     }

    //     function clearFilters() {
    //         $('.filter-checkbox').prop('checked', false);
    //         window.history.pushState({}, '', window.location.pathname);
    //         updatePage();
    //     }

    //     function updateURL() {
    //         let urlParams = new URLSearchParams();
    //         $('.filter-checkbox:checked').each(function() {
    //             let name = $(this).attr('name');
    //             if (!urlParams.has(name)) {
    //                 urlParams.append(name, $(this).val());
    //             } else {
    //                 let values = urlParams.getAll(name);
    //                 values.push($(this).val());
    //                 urlParams.set(name, values.join(','));
    //             }
    //         });
    //         window.history.pushState({}, '', `?${urlParams.toString()}`);
    //         updatePage();
    //     }

    //     function setCheckboxesFromURL() {
    //         let urlParams = new URLSearchParams(window.location.search);
    //         $('.filter-checkbox').each(function() {
    //             let filterType = $(this).attr('name');
    //             let values = urlParams.get(filterType)?.split(',') || [];
    //             $(this).prop('checked', values.includes($(this).val()));
    //         });
    //     }

    //     function updatePage() {
    //         let urlParams = new URLSearchParams(window.location.search);
    //         $.ajax({
    //             url: 'fetch_products.php', // Change this to your server endpoint
    //             type: 'GET',
    //             data: urlParams.toString(),
    //             success: function(response) {
    //                 $('#col-lg-9').html(response);
    //             }
    //         });
    //     }

    //     setCheckboxesFromURL();

    //     $('.filter-checkbox').on('change', function() {
    //         updateURL();
    //     });

    //     $('#search-input').on('keyup', function() {
    //         let filter = $(this).val().toLowerCase();
    //         $('.col-md-4').each(function() {
    //             let productName = $(this).find('.product-title').text().toLowerCase();
    //             $(this).toggle(productName.indexOf(filter) > -1);
    //         });
    //     });

    //     $('#sort-select').on('change', function() {
    //         let selectedOption = $(this).val();
    //         let urlParams = new URLSearchParams(window.location.search);
    //         urlParams.set('sort', selectedOption);
    //         window.history.pushState({}, '', `?${urlParams.toString()}`);
    //         updatePage();
    //     });

    //     updatePage();
    // });









    $(document).ready(function() {
        function toggleCheckbox(id) {
            var checkbox = $('#' + id);
            checkbox.prop('checked', !checkbox.prop('checked'));
        }

        function clearFilters() {
            $('.filter-checkbox').prop('checked', false);
            window.history.pushState({}, '', window.location.pathname);
            location.reload();
        }

        function updateURL() {
            let urlParams = new URLSearchParams(window.location.search);
            let filters = {};

            $('.filter-checkbox').each(function() {
                let name = $(this).attr('name');
                if ($(this).prop('checked')) {
                    if (!filters[name]) {
                        filters[name] = [];
                    }
                    filters[name].push($(this).val());
                } else {
                    if (urlParams.has(name)) {
                        let existingValues = urlParams.get(name).split(',').filter(val => val !== $(this)
                            .val());
                        if (existingValues.length > 0) {
                            urlParams.set(name, existingValues.join(','));
                        } else {
                            urlParams.delete(name);
                        }
                    }
                }
            });

            $.each(filters, function(key, value) {
                urlParams.set(key, value.join(','));
            });

            window.history.pushState({}, '', `?${urlParams.toString()}`);
            location.reload();
        }

        function setCheckboxesFromURL() {
            let urlParams = new URLSearchParams(window.location.search);
            $('.filter-checkbox').each(function() {
                let filterType = $(this).attr('name');
                let values = urlParams.get(filterType)?.split(',') || [];
                $(this).prop('checked', values.includes($(this).val()));
            });
        }

        setCheckboxesFromURL();

        $('.filter-checkbox').on('change', function() {
            updateURL();
        });

        $('#search-input').on('keyup', function() {
            let filter = $(this).val().toLowerCase();
            $('.col-md-4').each(function() {
                let productName = $(this).find('.product-title').text().toLowerCase();
                $(this).toggle(productName.indexOf(filter) > -1);
            });
        });

        $('#sort-select').on('change', function() {
            let selectedOption = $(this).val();
            let productsContainer = $('#products-container');
            let productCards = $('.col-md-4').toArray();

            let sortFn;
            switch (selectedOption) {
                case 'price-asc':
                    sortFn = (a, b) => parseFloat($(a).find('.product-price').text().replace('$', '')) -
                        parseFloat($(b).find('.product-price').text().replace('$', ''));
                    break;
                case 'price-desc':
                    sortFn = (a, b) => parseFloat($(b).find('.product-price').text().replace('$', '')) -
                        parseFloat($(a).find('.product-price').text().replace('$', ''));
                    break;
            }
            productCards.sort(sortFn);
            productsContainer.empty().append(productCards);
        });
    });
</script>